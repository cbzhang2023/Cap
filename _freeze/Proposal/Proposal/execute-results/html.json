{
  "hash": "bf4771ebd394b731b77da6d3157c3dcd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Proposal\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n  output-width: Inf\nformat: \n  html:\n    code-fold: true\n---\n\n\n\n## Proposal: Predicting Rental Prices with Business Trends\n\n## 1. Project Overview\n\nRental prices in urban areas are influenced by various factors, including business activities, geographical accessibility, and economic growth patterns. This project aims to build a comprehensive understanding of how business trends affect rental markets by leveraging postal codes for spatial mapping, conducting spatial analyses, and using machine learning to predict future rental price trends. The project will culminate in an R Shiny dashboard and an R Quarto report documenting the entire process and insights.\n\n## 2. Objectives\n\n**Understand Business Trends:**\n\nAnalyze temporal and spatial patterns of business registrations and closures using postal codes for accurate geolocation.\n\nIdentify business hotspots and trends over time.\n\n**Assess Geographical Accessibility:**\n\nExamine how accessibility to business hubs affects rental prices.\n\nModel the impact of spatial factors such as proximity and density on rental prices.\n\n**Predict Future Rental Prices:**\n\nDevelop a predictive model that incorporates business trends, geographical accessibility, and property characteristics.\n\n## 3. Data Overview\n\n**Dataset 1**: EntitiesRegisteredwithACRA.csv\n\nContains information on business registrations and closures, including postal codes for geospatial identification.\n\n**Key Columns:**\n\nBusiness ID, Registration Date, Closure Date\n\nBusiness Type, Sector\n\nLocation (postal code or address)\n\n**Dataset 2**: RentingOutofFlats2024CSV.csv\n\nIncludes residential rental price data.\n\n**Key Columns:**\n\nRental Price, Lease Type, Property Type\n\nLocation (postal code or address), Lease Duration\n\nStart Date, End Date\n\n## 4. Methodology\n\n### 4.1 Data Preprocessing\n\n**Cleaning and Standardization:**\n\nRemove duplicates and handle missing values.\n\nStandardize date formats and ensure consistent variable naming conventions.\n\n**Geocoding Using Postal Codes:**\n\nExtract postal codes from Dataset 1 (EntitiesRegisteredwithACRA.csv) and Dataset 2 (RentingOutofFlats2024CSV.csv).\n\n**Use postal codes to determine spatial coordinates (latitude and longitude):**\n\nUse APIs like Google Maps, OneMap (Singapore), or OpenStreetMap.\n\nCross-validate results with an authoritative postal code database to ensure accuracy.\n\nGenerate a spatial dataset with precise geolocations for businesses and rental properties.\n\n**Spatial Integration:**\n\nIntegrate datasets by matching geographical regions or proximity.\n\nUse postal code-based boundaries for initial integration and fine-tune with exact coordinates.\n\n### **4.2 Geocoding Using Geocode.xyz API**\n\n#### **Purpose**\n\nTo transform detailed address information into precise spatial coordinates (latitude and longitude) for each rental property.\n\n#### **Steps**\n\n1.  **Prepare Full Address**\n\n    Construct a `full_address` field by concatenating key address components:\n\n2.  **Geocoding Process**\n\n    Use the **Geocode.xyz API** to convert the `full_address` into geographic coordinates:\n\n    Input: Full address string.\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    library(readr)\n    \n    reantal_unclean_data <- read_csv(\"data/RentingOutofFlats2024CSV.csv\")\n    \n    head(reantal_unclean_data, 5)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    # A tibble: 5 × 6\n      rent_approval_date town       block street_name      flat_type monthly_rent\n      <chr>              <chr>      <chr> <chr>            <chr>            <dbl>\n    1 2021-01            ANG MO KIO 105   ANG MO KIO AVE 4 4-ROOM            2000\n    2 2021-01            ANG MO KIO 107   ANG MO KIO AVE 4 3-ROOM            1750\n    3 2021-01            ANG MO KIO 108   ANG MO KIO AVE 4 3-ROOM            1750\n    4 2021-01            ANG MO KIO 111   ANG MO KIO AVE 4 5-ROOM            2230\n    5 2021-01            ANG MO KIO 111   ANG MO KIO AVE 4 5-ROOM            2450\n    ```\n    \n    \n    :::\n    :::\n\n\n\n    ![](/images/clipboard-3740434886.png)\n\n3.  Output: Latitude and longitude values returned by the API.\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    library(readr)\n    \n    reantal_data <- read_csv(\"data/merged_hdb_with_coordinates.csv\")\n    \n    head(reantal_unclean_data, 5)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    # A tibble: 5 × 6\n      rent_approval_date town       block street_name      flat_type monthly_rent\n      <chr>              <chr>      <chr> <chr>            <chr>            <dbl>\n    1 2021-01            ANG MO KIO 105   ANG MO KIO AVE 4 4-ROOM            2000\n    2 2021-01            ANG MO KIO 107   ANG MO KIO AVE 4 3-ROOM            1750\n    3 2021-01            ANG MO KIO 108   ANG MO KIO AVE 4 3-ROOM            1750\n    4 2021-01            ANG MO KIO 111   ANG MO KIO AVE 4 5-ROOM            2230\n    5 2021-01            ANG MO KIO 111   ANG MO KIO AVE 4 5-ROOM            2450\n    ```\n    \n    \n    :::\n    :::\n\n\n\n    ![](/images/clipboard-25686400.png)\n\n4.  **API Configuration**\n\n    Geocode.xyz provides accurate geocoding for global locations, including Singapore. The API allows queries for full address strings and returns precise geographic coordinates along with additional metadata.\n\n5.  **Error Handling and Validation**\n\n    Monitor the API responses to handle:\n\n    Invalid or ambiguous address queries.\n\n    API rate limits by batching requests or incorporating pauses between queries.\n\n    Cross-validate geocoded coordinates using authoritative postal code boundaries to ensure accuracy.\n\n### 4.3 Geographical Accessibility Modeling\n\n#### 4.3.1 Travel Time and Proximity Analysis\n\n##### Purpose\n\nTo compute the travel times between rental properties and business clusters, and to analyze their proximity to key infrastructure such as public transport stations, major roads, and business hubs. This analysis will provide essential features for later predictive modeling.\n\n##### Methodology\n\nWe will perform **network-based spatial analysis** using tools such as:\n\n-   **OSRM (Open Source Routing Machine)** for real-time routing and travel time calculation.\n-   **gdistance** package in R to compute the least-cost path based on road networks.\n\n##### Travel Time Calculation Using OSRM\n\nOSRM is used to calculate travel times between rental properties and business hotspots based on the shortest paths over a road network.\n\nGiven a set of rental property locations ( P = {p_1, p_2, \\dots, p_n} ) and a set of business hotspots ( H = {h_1, h_2, \\dots, h_m} ), the travel time between a property ( p_i ) and a hotspot ( h_j ) is calculated as:\n\n$$\nT(p_i, h_j) = f(\\text{distance}, \\text{speed limit}, \\text{road type})\n$$\n\nWhere:\\\n- ( T(p_i, h_j) ) is the travel time from property ( p_i ) to hotspot ( h_j ).\\\n- ( \\text{distance} ) is the road distance between the two points.\\\n- ( \\text{speed limit} ) is the maximum speed allowed on each segment of the road network.\\\n- ( \\text{road type} ) accounts for road hierarchies (e.g., highways, local streets).\n\n##### Proximity Analysis\n\nProximity to key infrastructure will be computed using **Euclidean distance** and **network distance**.\n\nThe Euclidean distance between two points ( (x_1, y_1) ) and ( (x_2, y_2) ) is calculated as:\n\n$$\nd = \\sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2}\n$$\n\nHowever, since real-world travel happens along road networks, **network distance** will be used for a more realistic analysis. Network distance is computed by summing the lengths of road segments between two points.\n\n##### Accessibility to Public Transport and Major Roads\n\nWe will calculate the proximity of rental properties to:\n\n-   **MRT (Mass Rapid Transit) stations**\n-   **Bus stops**\n-   **Major roads and expressways**\n\nLet ( p_i ) be a rental property, and ( t_j ) be the nearest transport station:\n\n$$\nD(p_i, t_j) = \\min \\{d(p_i, t_k) \\mid t_k \\in T\\}\n$$\n\nWhere:\\\n- ( D(p_i, t_j) ) is the shortest network distance from property ( p_i ) to the nearest transport station ( t_j ).\\\n- ( T ) is the set of all transport stations.\n\n#### 4.3.2 Accessibility Index Development\n\nTo develop an **Accessibility Index** that combines various accessibility metrics, including travel time, proximity to business hubs, and density of nearby businesses.\n\nThe **Accessibility Index (AI)** for a rental property ( p_i ) is calculated as:\n\n$$\nAI(p_i) = \\alpha \\cdot \\frac{1}{T(p_i, h_j)} + \\beta \\cdot \\frac{1}{D(p_i, t_j)} + \\gamma \\cdot B(p_i)\n$$\n\nWhere:\\\n- ( T(p_i, h_j) ) is the travel time from property ( p_i ) to the nearest business hub ( h_j ).\\\n- ( D(p_i, t_j) ) is the network distance from property ( p_i ) to the nearest transport station ( t_j ).\\\n- ( B(p_i) ) is the density of businesses within a defined radius around ( p_i ).\\\n- ( \\alpha ), ( \\beta ), and ( \\gamma ) are weighting factors to balance the importance of each component.\n\n### 4.4 Rental Price Modeling\n\n#### 4.4.1 Feature Engineering\n\n##### Purpose\n\nTo create additional variables (features) that capture spatial, temporal, and property-related characteristics for use in predictive modeling.\n\n##### Derived Features\n\n1.  **Spatial Features**\n    -   Accessibility Index (computed in Section 4.3).\\\n    -   Proximity to business hubs, public transport, and major roads.\\\n    -   Density of nearby businesses.\n2.  **Temporal Features**\n    -   Yearly and monthly rental trends.\\\n    -   Seasonal variations (e.g., higher rents during certain months).\n3.  **Property Features**\n    -   Property type (e.g., 3-room, 4-room).\\\n    -   Lease type (e.g., short-term, long-term).\\\n    -   Lease duration.\n\n#### 4.4.2 Predictive Modeling\n\n##### Purpose\n\nTo build machine learning models that predict rental prices based on the derived features.\n\n##### Methodology\n\nWe will use the following machine learning algorithms:\n\n1.  **Random Forest (RF)**\\\n2.  **XGBoost (Extreme Gradient Boosting)**\\\n3.  **Gradient Boosting Machines (GBM)**\n\n##### Random Forest Model\n\nRandom Forest is an ensemble learning method that builds multiple decision trees and combines their outputs to improve prediction accuracy.\n\nThe predicted rental price ( \\hat{y} ) is computed as:\n\n$$\n\\hat{y} = \\frac{1}{n} \\sum_{i=1}^{n} f_i(x)\n$$\n\nWhere:\\\n- ( n ) is the number of decision trees in the forest.\\\n- ( f_i(x) ) is the prediction from the ( i\\^{th} ) tree.\n\n##### Evaluation Metrics\n\nWe will evaluate the models using the following metrics:\n\n1.  **Root Mean Square Error (RMSE)**\\\n    Measures the average magnitude of errors.\n\n    $$\n    RMSE = \\sqrt{\\frac{1}{n} \\sum_{i=1}^{n} (\\hat{y}_i - y_i)^2}\n    $$\n\n2.  **R² (Coefficient of Determination)**\\\n    Measures how well the model explains the variability of the target variable.\n\n    $$\n    R^2 = 1 - \\frac{\\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2}{\\sum_{i=1}^{n} (y_i - \\bar{y})^2}\n    $$\n\n3.  **Mean Absolute Error (MAE)**\\\n    Measures the average absolute error between predicted and actual values.\n\n    $$\n    MAE = \\frac{1}{n} \\sum_{i=1}^{n} |\\hat{y}_i - y_i|\n    $$\n\n#### 4.4.3 Model Interpretation and Insights\n\nOnce the models are trained and evaluated, feature importance analysis will be conducted to identify the most significant factors affecting rental prices. The insights derived from the models will inform stakeholders about key drivers of rental price fluctuations.\n\n#### 4.4.4 Prediction and Visualization\n\n**Forecasting Future Rental Prices:**\n\nPredict rental price changes by incorporating temporal patterns of business activity.\n\nIdentify high-growth areas for strategic urban planning.\n\n**Interactive R Shiny Dashboard:**\n\nVisualize:\n\nBusiness trends over time and space.\n\nAccessibility analysis and its correlation with rental prices.\n\nPredicted rental price trends by region.\n\n**R Quarto Report:**\n\nDocument all analysis steps, methods, and findings.\n\nInclude visualizations such as heatmaps, spatial plots, and trend charts.\n\n## 5. Tools and Packages\n\nThis project will leverage a variety of R tools and packages to perform data cleaning, geocoding, spatial analysis, machine learning, and visualization. Below is a detailed breakdown of the packages used in each step of the analysis process.\n\n### 5.1 R Packages\n\n| **Category** | **Packages** | **Description** |\n|------------------|-------------------|-----------------------------------|\n| **Data Cleaning** | `dplyr`, `tidyr` | For data wrangling, handling missing values, and reshaping data. |\n| **Geocoding** | `ggmap`, `osmdata`, `tmaptools` | For converting addresses into spatial coordinates (latitude and longitude). |\n| **Spatial Analysis** | `sf`, `spatstat`, `spdep`, `NKDE` | For handling spatial data, performing spatial point pattern analysis, and spatial autocorrelation. |\n| **Accessibility Modeling** | `osrm`, `gdistance` | For calculating travel times and proximity measures using network-based spatial analysis. |\n| **Machine Learning** | `caret`, `randomForest`, `xgboost`, `glmnet` | For building and tuning predictive models to forecast rental prices. |\n| **Visualization** | `ggplot2`, `leaflet`, `shiny`, `tmap` | For creating static and interactive visualizations, maps, and dashboards. |\n| **Reporting** | `quarto`, `knitr`, `rmarkdown` | For generating reproducible reports and documentation. |\n\n### 5.2 Additional Tools\n\n-   **Geocode.xyz API**: Used for geocoding addresses to obtain precise latitude and longitude coordinates.\n\n## 6. Expected Deliverables\n\nThe project will produce multiple outputs, including spatial analysis results, a trained predictive model, an interactive dashboard, and a comprehensive report. Below is a detailed list of the expected deliverables.\n\n### 6.1 Spatial Analysis Outputs\n\nThe project will produce a series of spatial analysis outputs, including:\n\n-   **Maps of Business Activity Hotspots**\\\n    Identifying clusters of business activities using spatial point pattern analysis (e.g., KDE, spatial autocorrelation).\n\n-   **Accessibility Analysis Layers**\\\n    Maps showing travel times and proximity to business hubs, public transport, and major roads, providing insights into the geographical accessibility of rental properties.\n\n### 6.2 Predictive Model\n\nThe project will develop a **trained machine learning model** to predict rental prices based on spatial, temporal, and property-related features. The model will be evaluated using multiple metrics, including **RMSE**, **R²**, and **MAE**, to ensure accuracy and robustness.\n\n**Key Features of the Model:**\n\n-   **Inputs**: Accessibility index, proximity to business hubs, lease type, property type, lease duration, and seasonal trends.\n-   **Algorithms**: Random Forest, XGBoost, and Gradient Boosting Machines (GBM).\n-   **Outputs**: Predicted rental prices with confidence intervals.\n\n### 6.3 Interactive Dashboard\n\nAn **R Shiny dashboard** will be developed to provide users with an interactive interface to explore rental trends, visualize accessibility, and predict rental prices based on user-defined parameters.\n\n**Key Features of the Dashboard:**\n\n-   **Interactive Maps**: Visualizing business activity hotspots, accessibility layers, and rental price predictions.\n-   **Trend Analysis**: Exploring rental trends over time (monthly, yearly).\n-   **Prediction Tool**: Allowing users to input property details and predict rental prices in real time.\n\n### 6.4 Comprehensive Report\n\nA **comprehensive R Quarto report** will be produced, documenting the entire analysis process, key insights, and recommendations. The report will include:\n\n-   **Introduction and Objectives**\\\n-   **Methodology** (Data Cleaning, Geocoding, Spatial Analysis, Modeling)\\\n-   **Results and Discussion**\\\n-   **Recommendations for Policy and Business Decisions**\n\n## 7. Challenges and Mitigation\n\nSeveral challenges are anticipated during the project. Below is a breakdown of these challenges and the corresponding mitigation strategies.\n\n### 7.1 Geocoding Accuracy\n\n**Challenge:**\\\nGeocoding accuracy is critical for spatial analysis. Inaccurate or incomplete geocoding can impact the reliability of the results.\n\n**Mitigation:**\n\n-   Use **verified postal code databases** to cross-check the accuracy of geocoded coordinates.\n-   Leverage **multiple geocoding APIs** for cross-validation.\n-   Implement **error-handling mechanisms** to detect and correct incorrect geocoded locations.\n\n### 7.2 Handling Large Datasets\n\n**Challenge:**\\\nThe datasets involved may be large, especially when working with spatial data, which can lead to performance issues.\n\n**Mitigation:**\n\n-   Use **optimized data structures** in R, such as `sf` for spatial data and `data.table` for large datasets.\n-   Utilize **parallel processing** to speed up spatial and machine learning computations.\n-   Consider using **PostgreSQL/PostGIS** for efficient storage and querying of spatial data.\n\n### 7.3 Model Generalization\n\n**Challenge:**\\\nEnsuring that the predictive model performs well across different regions and timeframes is crucial for reliable rental price predictions.\n\n**Mitigation:**\n\n-   Perform **thorough model validation** using cross-validation and test datasets from various regions.\n-   Incorporate **time-based validation** to ensure the model is robust against temporal variations.\n-   Use **feature importance analysis** to identify key drivers of rental prices and improve model interpretability.\n\n## 8. Conclusion\n\nThis project aims to leverage **postal code-based geolocation**, **spatial analysis**, and **machine learning** to provide actionable insights into how business trends influence rental markets. The combination of robust data analysis and interactive tools will support decision-making in various domains, including:\n\n-   **Urban Planning**: Providing insights into accessibility and infrastructure impact on rental prices.\n-   **Real Estate Decision-Making**: Helping landlords and tenants understand rental trends and property valuation.\n-   **Policy Formulation**: Offering data-driven recommendations for government agencies to address housing affordability and business development.\n\nThe key outputs of the project include:\n\n-   **Spatial Analysis Outputs**: Hotspot maps and accessibility layers.\n-   **Predictive Model**: A machine learning model to forecast rental prices.\n-   **Interactive Dashboard**: An R Shiny application for exploring trends and predictions.\n-   **Comprehensive Report**: An R Quarto document detailing the analysis process, insights, and recommendations.\n\nBy addressing the challenges associated with geocoding, handling large datasets, and ensuring model generalization, this project will provide a valuable contribution to the fields of urban planning, real estate, and data-driven policymaking.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}